edit Page
url = 'https://www.imdb.com/search/title/?countries=kr&sort=moviemeter&title_type=tv_series'
page = Page.new(url)
puts page.body
edit page
reload!
exit
reload!
url = 'https://www.imdb.com/search/title/?countries=kr&sort=moviemeter&title_type=tv_series'
page = Page.new(url)
ap page.body
page.doc
page.body
edit Page
body = page.body
doc = Nokogiri::HTML.parse(doc)
doc = Nokogiri::HTML.parse(doc).css('#lister-list')
doc = Nokogiri::HTML.parse(doc).css('lister-list')
doc = Nokogiri::HTML.parse(doc).css('.lister-list')
doc = Nokogiri::HTML.parse(body).css(".lister-list")
ap doc
doc.css('.lister-item-header a').text
doc.css('.lister-item-header a').first.text
doc.css('.lister-item-header lister-item-year').first.text
doc.css('.lister-item-header.lister-item-year')
doc.css('.lister-item-header lister-item-year')
doc.css('.lister-item-mode-advanced')
doc
doc.css('.lister-item-mode-advanced')
doc.css('.lister-item mode-advanced')
doc.css('div.lister-item.mode-advanced')
doc.css('div.lister-item.mode-advanced').count
doc.css('div.lister-item.mode-advanced').first
shows = doc.css('div.lister-item.mode-advanced').first
shows = doc.css('div.lister-item.mode-advanced')
show = shows.first
show.css('lister-item-header a').text
show.css('lister-item-header a')
show.css('lister-item-header')
show.css('div.lister-item-header')
show.css('h3.lister-item-header')
show.css('h3.lister-item-header a')
show.css('h3.lister-item-header a').text
title = show.css('h3.lister-item-header a').text
title = show.css('span.lister-item-year').text
title = show.css('h3.lister-item-header a').text
date = show.css('span.lister-item-year').text
genre = show.css('span.genre').text
genre = show.css('span.genre').text.strip
genres = show.css('span.genre').text.strip.split(', ')
score = show.css('span.rating-star strong').text
score = show.css('span.rating-star strong')
score = show.css('span.imdb-rating').text
score = show.css('span.imdb-rating')
score = show.css('div.ratings-imdb-rating').text
score = show.css('div.ratings-imdb-rating strong').text
score = show.css('div.ratings-imdb-rating strong').text.to_f
votes = show.css('span.nv')
votes = show.css('p.sort-num_votes-visible')
votes = show.css('p.sort-num_votes-visible').text
votes = show.css('p.sort-num_votes-visible span').text
votes = show.css('p.sort-num_votes-visible span').text.split(':').last
votes = show.css('p.sort-num_votes-visible')
votes = show.css('p.sort-num_votes-visible')
votes = show.css('p.sort-num_votes-visible')['data-value']
votes = show.css('p.sort-num_votes-visible').size
votes = show.css('p.sort-num_votes-visible').first
votes = show.css("p.sort-num_votes-visible['data-value']")
votes = show.css("p.sort-num_votes-visible['data-value=']")
votes = show.css(p.sort-num_votes-visible[data-name=]')
votes = show.css(p.sort-num_votes-visible[data-name="nv"]')
votes = show.css('p.sort-num_votes-visible[data-name="nv"]')
votes = show.css('p.sort-num_votes-visible span[name="nv"]')
votes = show.css('p.sort-num_votes-visible span[name="nv"][data-value]')
votes = show.css('p.sort-num_votes-visible')
votes = show.css('p.sort-num_votes-visible span')
votes = show.css('p.sort-num_votes-visible span[name="nv"]')
votes = show.css('p.sort-num_votes-visible span[name="nv"]').text
votes = show.css('p.sort-num_votes-visible span[name="nv"]')['value']
votes = show.css('p.sort-num_votes-visible span[name="nv"]').size
votes = show.css('p.sort-num_votes-visible span[name="nv"]').value
votes = show.css('p.sort-num_votes-visible span[name="nv"]').attributes
votes = show.css('p.sort-num_votes-visible span[name="nv"]').attribute
votes = show.css('p.sort-num_votes-visible span[name="nv"]').attribute('value')
votes = show.css('p.sort-num_votes-visible span[name="nv"]').attribute('name')
votes = show.css('p.sort-num_votes-visible span[name="nv"]').attribute('data-value')
votes = show.css('p.sort-num_votes-visible span[name="nv"]').attribute('data-value').value
votes = show.css('p.sort-num_votes-visible span[name="nv"]').attribute('data-value').value.to_i
history
edit Show
reload!
Show
edit Page
reload!
url = 'https://www.imdb.com/search/title/?countries=kr&sort=moviemeter&title_type=tv_series'
edit page
shows = Page.new(url).shows
shows
edit page
shows = Page.new(url).shows
edit page
exit
url = 'https://www.imdb.com/search/title/?countries=kr&sort=moviemeter&title_type=tv_series'
shows = Page.new(url).shows
show = shows.first
show.date.split('-')
show.date.split('\d{4}')
show.date.split(/\d{4}/)
show.date.match(/\d{4}/)
show.date.scan(/\d{4}/)
Range.new(show.date.scan(/\d{4}/))
Range.new(show.date.scan(/\d{4}/).map(&:to_i))
Range.new(show.date.scan(/\d{4}/).map(&:to_i),nil)
Range.new(show.date.scan(/\d{4}/).map(&:to_i).first,nil)
edit Show
shows = Page.new(url).shows
edit Show
shows = Page.new(url).shows
title = show.css('h3.lister-item-header a').text
shows = Page.new(url).shows
edit Show
shows = Page.new(url).shows
show = shows.last
show.url
show.url.attributes('href')
show.url.attribute('href')
show.url.attribute('href').value
edit Show
shows = Page.new(url).shows
show = shows.last
url = show.url
Faraday.parse(url)
URI.parse(url)
URI.parse(url).host
URI.parse(url).path
URI.parse(url).schema
URI.parse(url).scheme
edit Show
shows = Page.new(url).shows
edit Show
shows = Page.new(url).shows
reload!
exit
url = 'https://www.imdb.com/search/title/?countries=kr&sort=moviemeter&title_type=tv_series'
shows = Page.new(url).shows
edit Show
shows = Page.new(url).shows
show = shows.last
show.url
params = uri.params
params = show.url.params
params = show.url.query_params
show.uri = show.uri.query = nil
show.url = show.url.query = nil
show.url.to_s
parsed = show.url
show = shows.last
shows = Page.new(url).shows
url = shows.last.url
url.fragment = uri.query = nil
url.fragment = url.query = nil
url.to-s
url.to_s
edit Show
shows = Page.new(url).shows
url = 'https://www.imdb.com/search/title/?countries=kr&sort=moviemeter&title_type=tv_series'
shows = Page.new(url).shows
exit
url = 'https://www.imdb.com/search/title/?countries=kr&sort=moviemeter&title_type=tv_series'
shows = Page.new(url).shows
page = Page.new(url)
page.country
page.doc
page.doc.css('div.article')
edit Page
shows = Page.new(url).shows
page = Page.new(url)
doc = page.doc
doc.css('div.article')
doc.css('div.article h1.header')
doc.css('div.article h1.header').text
doc.css('div.article h1.header').text.split("\n")
doc.css('div.article h1.header').text.split("\n")[1]
edit Page
shows = Page.new(url).shows
exit
